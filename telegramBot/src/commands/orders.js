// orders.js
const bot = require("../bot");
const redisClient = require("../redis");
const axios = require("axios");

// –§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è –æ–¥–Ω–æ–≥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
const formatOrder = (order) => {
  const createdAt = new Date(order.createdAt).toLocaleDateString("uk-UA");

  return (
    `üßæ *–ü–æ–ø–µ—Ä–µ–¥–Ω—î –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è*\n` +
    `üë§ –ö–ª—ñ—î–Ω—Ç: ${order.name}\n` +
    `üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${order.phone}\n` +
    `‚úâÔ∏è Email: ${order.email}\n` +
    `üëï –¢–∏–ø –æ–¥—è–≥—É: ${order.clothType}\n` +
    `üß¥ –ü–æ—Å–ª—É–≥–∞: ${order.productType}\n` +
    `üìù –ü—Ä–∏–º—ñ—Ç–∫–∞:\n${order.note}\n` +
    `üìÖ –î–∞—Ç–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è: ${createdAt}`
  );
};

const mapStatus = (status) => {
  switch (status) {
    case "0":
      return "–û—á—ñ–∫—É—î—Ç—å—Å—è";
    case "1":
      return "–£ –ø—Ä–æ—Ü–µ—Å—ñ";
    case "2":
      return "–ó–∞–≤–µ—Ä—à–µ–Ω–æ";
    default:
      return "–ù–µ–≤—ñ–¥–æ–º–∏–π";
  }
};

module.exports = async function orders(msg) {
  const chatId = msg.chat.id.toString();

  try {
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—é –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    const phone = await redisClient.get(chatId);
    if (!phone) {
      bot.sendMessage(
        chatId,
        "‚ùå –í–∏ –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ñ. –ë—É–¥—å –ª–∞—Å–∫–∞, –Ω–∞–¥–∞–π—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É."
      );
      return;
    }

    // –û—Ç—Ä–∏–º—É—î–º–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑ API
    const response = await axios.get(
      "https://prano.group/api/telegram/orders",
      {
        headers: { Authorization: chatId },
      }
    );
    console.log("–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑ API:", response.data);
    let orders = response.data;

    if (!orders.length) {
      bot.sendMessage(chatId, "üì≠ –£ –í–∞—Å –ø–æ–∫–∏ –Ω–µ–º–∞—î –∑–∞–º–æ–≤–ª–µ–Ω—å.");
      return;
    }

    // –í—ñ–¥–±–∏—Ä–∞—î–º–æ 4 –æ—Å—Ç–∞–Ω–Ω—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
    orders = orders.slice(-4).reverse(); // –æ—Å—Ç–∞–Ω–Ω—ñ 4 –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º—É –ø–æ—Ä—è–¥–∫—É

    // –§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    let message = "üßæ 4 –æ—Å—Ç–∞–Ω–Ω—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:\n\n";
    orders.forEach((order, index) => {
      message += `#${index + 1}\n`;
      message += formatOrder(order);
      message += "\n\n";
    });

    bot.sendMessage(chatId, message, {
      parse_mode: "Markdown",
      disable_web_page_preview: true,
    });
  } catch (error) {
    console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω—å:", error.message);
    bot.sendMessage(
      chatId,
      "‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ."
    );
  }
};
