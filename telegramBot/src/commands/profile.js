const bot = require("../bot");
const redisClient = require("../redis");
const axios = require("axios");
const auth = require("../handlers/auth");

module.exports = async function profile(msg) {
  const chatId = msg.chat.id.toString();

  const phone = await redisClient.get(chatId);

  if (!phone) {
    auth(msg);
    return;
  }

  try {
    const response = await axios.get("https://prano.group/api/telegram/user", {
      headers: {
        Authorization: chatId.toString(), 
      },
    });

    const userData = response.data;

    const formattedMessage = `
üë§ *–í–∞—à –ø—Ä–æ—Ñ—ñ–ª—å:*

üìõ –Ü–º'—è: *${userData.name}*
üìß Email: ${userData.email}
üì± –¢–µ–ª–µ—Ñ–æ–Ω: ${userData.phone}


üïì –°—Ç–≤–æ—Ä–µ–Ω–æ: ${new Date(userData.createdAt).toLocaleString("uk-UA")}

`;

    bot.sendMessage(chatId, formattedMessage, {
      parse_mode: "Markdown",
    });
  } catch (error) {
    console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:", error.message);
    bot.sendMessage(
      chatId,
      "‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ."
    );
  }
};
