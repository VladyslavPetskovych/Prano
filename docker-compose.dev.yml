name: prano-app

services:
  mongo:
    image: mongo:7.0.12
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_USER=${MONGO_USER}
      - MONGO_PASSWORD=${MONGO_PASSWORD}
    volumes:
      - mongo_data:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js
    networks:
      - prano-app
    restart: unless-stopped

  api:
    build:
      context: ./server
      target: development
    environment:
      - DB_URL=${DB_URL}
      - FRONT_URL=${FRONT_URL}
      - JWT_ACCESS_SECRET=${JWT_ACCESS_SECRET}
      - JWT_ACCESS_EXPIRES_IN=${JWT_ACCESS_EXPIRES_IN}
      - JWT_ACTIVATE_SECRET=${JWT_ACTIVATE_SECRET}
      - JWT_ACTIVATE_EXPIRES_IN=${JWT_ACTIVATE_EXPIRES_IN}
      - JWT_FORGOT_SECRET=${JWT_FORGOT_SECRET}
      - JWT_FORGOT_EXPIRES_IN=${JWT_FORGOT_EXPIRES_IN}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - JWT_REFRESH_EXPIRES_IN=${JWT_REFRESH_EXPIRES_IN}
      - SECRET_SALT=${SECRET_SALT}
      - NO_REPLY_EMAIL=${NO_REPLY_EMAIL}
      - NO_REPLY_PASSWORD=${NO_REPLY_PASSWORD}
      - CC_API_KEY=${CC_API_KEY}
      - MANAGER_EMAIL=${MANAGER_EMAIL}
    volumes:
      - ./server:/app
      - /app/node_modules
    networks:
      - prano-app
    depends_on:
      - mongo
    restart: unless-stopped

  web:
    build:
      context: ./site
      target: development
    volumes:
      - ./site:/app
      - /app/node_modules
    networks:
      - prano-app
    depends_on:
      - api
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.dev.conf:/etc/nginx/conf.d/default.conf
    networks:
      - prano-app
    depends_on:
      - web
    restart: unless-stopped

  redis:
    image: redis:8.0-rc1-alpine
    volumes:
      - redis_data:/data
    networks:
      - prano-app
    restart: unless-stopped

  tgbot:
    build:
      context: ./telegramBot
    environment:
      - token = ${TG_BOT_TOKEN}
      - REDIS_URL = ${REDIS_URL}
      - BD_ACCESS=${DB_URL}
    volumes:
      - ./telegramBot:/app
      - /app/node_modules
    networks:
      - prano-app
    depends_on:
      - api
      - redis
    restart: unless-stopped

volumes: # /var/lib/docker
  mongo_data:

  redis_data:
networks:
  prano-app:
    driver: bridge
